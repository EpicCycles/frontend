// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PartSearch should render when minimal details are passed 1`] = `
<Fragment>
  <div
    className="grid-row"
    key="findPartTypeRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Part Type:
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <PartTypeSelect
        data-test="part-type-select"
        disabled={false}
        error=""
        fieldName="partTypeSelected"
        isEmptyAllowed={true}
        onChange={[MockFunction]}
        sections={
          Array [
            Object {
              "id": 1,
              "name": "Frameset",
              "partTypes": Array [
                Object {
                  "attributes": Array [
                    Object {
                      "attribute_name": "Size",
                      "attribute_type": "1",
                      "id": 1,
                      "in_use": true,
                      "mandatory": true,
                      "options": Array [],
                      "partType": 1,
                      "placing": 10,
                    },
                  ],
                  "can_be_omitted": false,
                  "can_be_substituted": true,
                  "customer_facing": false,
                  "id": 1,
                  "includeInSection": 1,
                  "name": "Frame",
                  "placing": 10,
                  "synonyms": Array [],
                },
                Object {
                  "attributes": Array [],
                  "can_be_omitted": true,
                  "can_be_substituted": false,
                  "customer_facing": false,
                  "id": 2,
                  "includeInSection": 1,
                  "name": "Fork",
                  "placing": 20,
                  "synonyms": Array [
                    Object {
                      "id": 1,
                      "name": "Front Fork",
                      "partType": 2,
                    },
                  ],
                },
                Object {
                  "attributes": Array [],
                  "can_be_omitted": false,
                  "can_be_substituted": false,
                  "customer_facing": true,
                  "id": 3,
                  "includeInSection": 1,
                  "name": "Headset",
                  "placing": 30,
                  "synonyms": Array [],
                },
              ],
              "placing": 10,
            },
          ]
        }
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="findBrandRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Brand:
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <BrandSelect
        bikeOnly={false}
        brands={
          Array [
            Object {
              "brand_name": "brand 1",
              "id": 1,
            },
            Object {
              "brand_name": "brand 2",
              "id": 2,
              "supplier": Array [],
              "supplier_names": Array [],
            },
            Object {
              "brand_name": "brand 3",
              "id": 3,
              "supplier": Array [
                1,
              ],
              "supplier_names": Array [
                "supplier 1",
              ],
            },
            Object {
              "brand_name": "brand 5",
              "changed": true,
              "id": 5,
              "supplier": Array [
                1,
                3,
              ],
              "supplier_names": Array [
                "supplier 1",
                "supplier 3",
              ],
            },
          ]
        }
        disabled={false}
        error=""
        fieldName="brandSelected"
        isEmptyAllowed={true}
        onChange={[MockFunction]}
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="partialPartNameRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Part name contains:
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <FormTextInput
        className=""
        dataType="text"
        error=""
        fieldName="searchPartName"
        id="searchPartName"
        label=""
        list=""
        onChange={[MockFunction]}
        onClick={[MockFunction]}
        placeholder="part name"
        size={30}
        title=""
        value=""
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="selectStandard"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Standard only
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <input
        name="searchStandard"
        onChange={[Function]}
        type="checkbox"
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="selectStocked"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Stocked only
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <input
        name="searchStocked"
        onChange={[Function]}
        type="checkbox"
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="runSearchRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Run Search
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <Icon
        as="i"
        name="search"
        onClick={[MockFunction]}
        title="find parts matching selection"
      />
    </div>
  </div>
</Fragment>
`;

exports[`PartSearch should render when more details are passed 1`] = `
<Fragment>
  <div
    className="grid-row"
    key="findPartTypeRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Part Type:
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <PartTypeSelect
        data-test="part-type-select"
        disabled={false}
        error=""
        fieldName="partTypeSelected"
        isEmptyAllowed={true}
        onChange={[MockFunction]}
        partTypeSelected={1}
        sections={
          Array [
            Object {
              "id": 1,
              "name": "Frameset",
              "partTypes": Array [
                Object {
                  "attributes": Array [
                    Object {
                      "attribute_name": "Size",
                      "attribute_type": "1",
                      "id": 1,
                      "in_use": true,
                      "mandatory": true,
                      "options": Array [],
                      "partType": 1,
                      "placing": 10,
                    },
                  ],
                  "can_be_omitted": false,
                  "can_be_substituted": true,
                  "customer_facing": false,
                  "id": 1,
                  "includeInSection": 1,
                  "name": "Frame",
                  "placing": 10,
                  "synonyms": Array [],
                },
                Object {
                  "attributes": Array [],
                  "can_be_omitted": true,
                  "can_be_substituted": false,
                  "customer_facing": false,
                  "id": 2,
                  "includeInSection": 1,
                  "name": "Fork",
                  "placing": 20,
                  "synonyms": Array [
                    Object {
                      "id": 1,
                      "name": "Front Fork",
                      "partType": 2,
                    },
                  ],
                },
                Object {
                  "attributes": Array [],
                  "can_be_omitted": false,
                  "can_be_substituted": false,
                  "customer_facing": true,
                  "id": 3,
                  "includeInSection": 1,
                  "name": "Headset",
                  "placing": 30,
                  "synonyms": Array [],
                },
              ],
              "placing": 10,
            },
          ]
        }
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="findBrandRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Brand:
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <BrandSelect
        bikeOnly={false}
        brandSelected={5}
        brands={
          Array [
            Object {
              "brand_name": "brand 1",
              "id": 1,
            },
            Object {
              "brand_name": "brand 2",
              "id": 2,
              "supplier": Array [],
              "supplier_names": Array [],
            },
            Object {
              "brand_name": "brand 3",
              "id": 3,
              "supplier": Array [
                1,
              ],
              "supplier_names": Array [
                "supplier 1",
              ],
            },
            Object {
              "brand_name": "brand 5",
              "changed": true,
              "id": 5,
              "supplier": Array [
                1,
                3,
              ],
              "supplier_names": Array [
                "supplier 1",
                "supplier 3",
              ],
            },
          ]
        }
        disabled={false}
        error=""
        fieldName="brandSelected"
        isEmptyAllowed={true}
        onChange={[MockFunction]}
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="partialPartNameRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Part name contains:
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <FormTextInput
        className=""
        dataType="text"
        error=""
        fieldName="searchPartName"
        id="searchPartName"
        label=""
        list=""
        onChange={[MockFunction]}
        onClick={[MockFunction]}
        placeholder="part name"
        size={30}
        title=""
        value="Hub"
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="selectStandard"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Standard only
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <input
        checked={true}
        name="searchStandard"
        onChange={[Function]}
        type="checkbox"
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="selectStocked"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Stocked only
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <input
        checked={true}
        name="searchStocked"
        onChange={[Function]}
        type="checkbox"
      />
    </div>
  </div>
  <div
    className="grid-row"
    key="runSearchRow"
  >
    <div
      className="grid-item--borderless field-label align_right"
    >
      Run Search
    </div>
    <div
      className="grid-item--borderless field-label "
    >
      <Icon
        as="i"
        name="search"
        onClick={[MockFunction]}
        title="find parts matching selection"
      />
    </div>
  </div>
</Fragment>
`;
