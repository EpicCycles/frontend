// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SupplierEdit displays correctly for existing supplier 1`] = `
<Fragment>
  <div
    style={
      Object {
        "textAlign": "left",
        "width": "100%",
      }
    }
  >
    <h2>
      Edit
       Supplier
    </h2>
    <EditModel
      actionsRequired={true}
      model={
        Object {
          "brand_names": Array [
            "brands 1",
            "brand 2",
            "brand 3",
          ],
          "id": 1,
          "link": "http://supplier.co.uk",
          "preferred_supplier": false,
          "supplier_name": "supplier name",
        }
      }
      modelDelete={[Function]}
      modelFields={
        Array [
          Object {
            "displaySize": 20,
            "error": "A value is required.",
            "fieldName": "supplier_name",
            "header": "Supplier",
            "maxLength": 100,
            "required": true,
            "type": "text",
          },
          Object {
            "fieldName": "preferred_supplier",
            "header": "Preferred",
            "type": "checkbox",
          },
          Object {
            "displaySize": 40,
            "fieldName": "link",
            "header": "URL",
            "maxLength": 100,
            "type": "text",
            "validator": [Function],
          },
        ]
      }
      modelSave={[Function]}
      pageMode={true}
      showReadOnlyFields={true}
    />
    <div
      key="supplierBrands1"
    >
      Brands: 
    </div>
  </div>
</Fragment>
`;

exports[`SupplierEdit displays correctly for existing supplier as a modal dialogue 1`] = `
<Fragment>
  <div
    style={
      Object {
        "textAlign": "right",
        "width": "100%",
      }
    }
  >
    <Icon
      as="i"
      circular={true}
      link={true}
      name="remove"
      onClick={[MockFunction]}
    />
  </div>
  <div
    style={
      Object {
        "textAlign": "left",
        "width": "100%",
      }
    }
  >
    <h2>
      Edit
       Supplier
    </h2>
    <EditModel
      actionsRequired={true}
      model={
        Object {
          "brand_names": Array [
            "brands 1",
            "brand 2",
            "brand 3",
          ],
          "id": 1,
          "link": "http://supplier.co.uk",
          "preferred_supplier": false,
          "supplier_name": "supplier name",
        }
      }
      modelDelete={[Function]}
      modelFields={
        Array [
          Object {
            "displaySize": 20,
            "error": "A value is required.",
            "fieldName": "supplier_name",
            "header": "Supplier",
            "maxLength": 100,
            "required": true,
            "type": "text",
          },
          Object {
            "fieldName": "preferred_supplier",
            "header": "Preferred",
            "type": "checkbox",
          },
          Object {
            "displaySize": 40,
            "fieldName": "link",
            "header": "URL",
            "maxLength": 100,
            "type": "text",
            "validator": [Function],
          },
        ]
      }
      modelSave={[Function]}
      pageMode={true}
      showReadOnlyFields={true}
    />
    <div
      key="supplierBrands1"
    >
      Brands: 
    </div>
  </div>
</Fragment>
`;

exports[`SupplierEdit displays correctly for new supplier 1`] = `
<Fragment>
  <div
    style={
      Object {
        "textAlign": "left",
        "width": "100%",
      }
    }
  >
    <h2>
      Add
       Supplier
    </h2>
    <EditModel
      actionsRequired={true}
      model={Object {}}
      modelDelete={[Function]}
      modelFields={
        Array [
          Object {
            "displaySize": 20,
            "error": "A value is required.",
            "fieldName": "supplier_name",
            "header": "Supplier",
            "maxLength": 100,
            "required": true,
            "type": "text",
          },
          Object {
            "fieldName": "preferred_supplier",
            "header": "Preferred",
            "type": "checkbox",
          },
          Object {
            "displaySize": 40,
            "fieldName": "link",
            "header": "URL",
            "maxLength": 100,
            "type": "text",
            "validator": [Function],
          },
        ]
      }
      modelSave={[Function]}
      pageMode={true}
      showReadOnlyFields={true}
    />
    <div
      key="supplierBrands"
    >
      Brands: 
    </div>
  </div>
</Fragment>
`;
