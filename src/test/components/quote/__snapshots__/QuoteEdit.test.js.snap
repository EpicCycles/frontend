// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QuoteEdit tests renders the form text correctly with no quote 1`] = `
<div
  className="fit-content"
>
  <EditModelPage
    model={Object {}}
    modelFields={
      Array [
        Object {
          "displaySize": 40,
          "fieldName": "quote_desc",
          "header": "Description",
          "maxLength": 60,
          "maxWidth": "250px",
          "required": true,
          "type": "text",
        },
        Object {
          "fieldName": "customer",
          "header": "Customer",
          "readOnly": true,
          "type": "customer",
        },
        Object {
          "fieldName": "quote_status",
          "header": "Status",
          "readOnly": true,
          "selectList": Array [
            Object {
              "name": "New",
              "value": "1",
            },
            Object {
              "name": "Issued",
              "value": "2",
            },
            Object {
              "name": "Archived",
              "value": "3",
            },
            Object {
              "name": "Order Created",
              "value": "4",
            },
          ],
          "type": "select_one",
        },
        Object {
          "fieldName": "club_member",
          "header": "Club Member?",
          "type": "checkbox",
        },
        Object {
          "fieldName": "version",
          "header": "Version",
          "readOnly": true,
          "type": "number",
        },
        Object {
          "fieldName": "created_by",
          "header": "Created By",
          "readOnly": true,
          "type": "user",
        },
        Object {
          "fieldName": "created_date",
          "header": "Date Created",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "upd_date",
          "header": "Updated",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "issued_date",
          "header": "Date Issued",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "displaySize": 7,
          "fieldName": "quote_price",
          "header": "Quote £",
          "maxLength": 10,
          "synonyms": Array [],
          "type": "currency",
        },
        Object {
          "displaySize": 6,
          "fieldName": "calculated_price",
          "header": "Total £",
          "maxLength": 10,
          "readOnly": true,
          "type": "currency",
        },
      ]
    }
    onChange={[Function]}
    persistedModel={Object {}}
    showReadOnlyFields={true}
  />
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey="new"
      model={Object {}}
      modelReset={[Function]}
    />
  </div>
</div>
`;

exports[`QuoteEdit tests renders the form text correctly with quote 1`] = `
<div
  className="fit-content"
>
  <EditModelPage
    model={
      Object {
        "add_date": "2018-07-04T13:02:09.988286+01:00",
        "id": 16,
        "upd_date": "2018-07-04T13:02:09.988343+01:00",
      }
    }
    modelFields={
      Array [
        Object {
          "displaySize": 40,
          "fieldName": "quote_desc",
          "header": "Description",
          "maxLength": 60,
          "maxWidth": "250px",
          "required": true,
          "type": "text",
        },
        Object {
          "fieldName": "customer",
          "header": "Customer",
          "readOnly": true,
          "type": "customer",
        },
        Object {
          "fieldName": "quote_status",
          "header": "Status",
          "readOnly": true,
          "selectList": Array [
            Object {
              "name": "New",
              "value": "1",
            },
            Object {
              "name": "Issued",
              "value": "2",
            },
            Object {
              "name": "Archived",
              "value": "3",
            },
            Object {
              "name": "Order Created",
              "value": "4",
            },
          ],
          "type": "select_one",
        },
        Object {
          "fieldName": "club_member",
          "header": "Club Member?",
          "type": "checkbox",
        },
        Object {
          "fieldName": "version",
          "header": "Version",
          "readOnly": true,
          "type": "number",
        },
        Object {
          "fieldName": "created_by",
          "header": "Created By",
          "readOnly": true,
          "type": "user",
        },
        Object {
          "fieldName": "created_date",
          "header": "Date Created",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "upd_date",
          "header": "Updated",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "issued_date",
          "header": "Date Issued",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "displaySize": 7,
          "fieldName": "quote_price",
          "header": "Quote £",
          "maxLength": 10,
          "synonyms": Array [],
          "type": "currency",
        },
        Object {
          "displaySize": 6,
          "fieldName": "calculated_price",
          "header": "Total £",
          "maxLength": 10,
          "readOnly": true,
          "type": "currency",
        },
      ]
    }
    onChange={[Function]}
    persistedModel={
      Object {
        "add_date": "2018-07-04T13:02:09.988286+01:00",
        "id": 16,
        "upd_date": "2018-07-04T13:02:09.988343+01:00",
      }
    }
    showReadOnlyFields={true}
  />
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey="new"
      model={
        Object {
          "add_date": "2018-07-04T13:02:09.988286+01:00",
          "id": 16,
          "upd_date": "2018-07-04T13:02:09.988343+01:00",
        }
      }
      modelReset={[Function]}
    />
  </div>
</div>
`;
