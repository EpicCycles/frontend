// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomerDetailEdit tests renders the form text correctly with customer 1`] = `
<div
  className="fit-content"
  id="customer-detail"
>
  <EditModelPage
    model={
      Object {
        "add_date": "2018-07-04T13:02:09.988286+01:00",
        "email": "anna.weaver@johnlewis.co.uk",
        "first_name": "Anna",
        "id": 16,
        "last_name": "Weaver",
        "upd_date": "2018-07-04T13:02:09.988343+01:00",
      }
    }
    modelFields={
      Array [
        Object {
          "error": "A value is required.",
          "fieldName": "first_name",
          "header": "First Name",
          "length": 60,
          "required": true,
          "size": 20,
          "synonyms": Array [],
          "type": "text",
        },
        Object {
          "error": "A value is required.",
          "fieldName": "last_name",
          "header": "Last Name",
          "length": 60,
          "required": true,
          "size": 20,
          "synonyms": Array [],
          "type": "text",
        },
        Object {
          "fieldName": "email",
          "header": "email",
          "type": "text",
          "validator": [Function],
        },
        Object {
          "fieldName": "club_member",
          "header": "Club Member?",
          "type": "checkbox",
        },
        Object {
          "fieldName": "add_date",
          "header": "Date Added",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "upd_date",
          "header": "Date Updated",
          "readOnly": true,
          "type": "date_time",
        },
      ]
    }
    onChange={[Function]}
    persistedModel={
      Object {
        "add_date": "2018-07-04T13:02:09.988286+01:00",
        "email": "anna.weaver@johnlewis.co.uk",
        "first_name": "Anna",
        "id": 16,
        "last_name": "Weaver",
        "upd_date": "2018-07-04T13:02:09.988343+01:00",
      }
    }
    showReadOnlyFields={true}
  />
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey="new"
      model={
        Object {
          "add_date": "2018-07-04T13:02:09.988286+01:00",
          "email": "anna.weaver@johnlewis.co.uk",
          "first_name": "Anna",
          "id": 16,
          "last_name": "Weaver",
          "upd_date": "2018-07-04T13:02:09.988343+01:00",
        }
      }
      modelReset={[Function]}
      modelSave={[Function]}
    />
  </div>
</div>
`;

exports[`CustomerDetailEdit tests renders the form text correctly with no customer 1`] = `
<div
  className="fit-content"
  id="customer-detail"
>
  <EditModelPage
    model={Object {}}
    modelFields={
      Array [
        Object {
          "error": "A value is required.",
          "fieldName": "first_name",
          "header": "First Name",
          "length": 60,
          "required": true,
          "size": 20,
          "synonyms": Array [],
          "type": "text",
        },
        Object {
          "error": "A value is required.",
          "fieldName": "last_name",
          "header": "Last Name",
          "length": 60,
          "required": true,
          "size": 20,
          "synonyms": Array [],
          "type": "text",
        },
        Object {
          "fieldName": "email",
          "header": "email",
          "type": "text",
          "validator": [Function],
        },
        Object {
          "fieldName": "club_member",
          "header": "Club Member?",
          "type": "checkbox",
        },
        Object {
          "fieldName": "add_date",
          "header": "Date Added",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "upd_date",
          "header": "Date Updated",
          "readOnly": true,
          "type": "date_time",
        },
      ]
    }
    onChange={[Function]}
    persistedModel={Object {}}
    showReadOnlyFields={true}
  />
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey="new"
      model={Object {}}
      modelReset={[Function]}
      modelSave={[Function]}
    />
  </div>
</div>
`;
