// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteEdit tests renders the form text correctly with no note 1`] = `
<div>
  <EditModelPage
    model={Object {}}
    modelFields={
      Array [
        Object {
          "displaySize": 400,
          "fieldName": "note_text",
          "header": "Note",
          "type": "textArea",
        },
        Object {
          "fieldName": "customer_visible",
          "header": "Customer View",
          "readOnly": true,
          "type": "checkbox",
        },
        Object {
          "fieldName": "created_date",
          "header": "Date Created",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "created_by",
          "header": "Created By",
          "readOnly": true,
          "type": "user",
        },
      ]
    }
    onChange={[Function]}
    persistedModel={Object {}}
  />
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey=""
      model={Object {}}
      modelDelete={[MockFunction]}
      modelReset={[Function]}
      modelSave={[MockFunction]}
    />
  </div>
</div>
`;

exports[`NoteEdit tests renders the form text correctly with note 1`] = `
<div>
  <EditModelPage
    model={
      Object {
        "customer_visible": true,
        "id": 23,
        "note_text": "note text here",
      }
    }
    modelFields={
      Array [
        Object {
          "displaySize": 400,
          "fieldName": "note_text",
          "header": "Note",
          "type": "textArea",
        },
        Object {
          "fieldName": "customer_visible",
          "header": "Customer View",
          "readOnly": true,
          "type": "checkbox",
        },
        Object {
          "fieldName": "created_date",
          "header": "Date Created",
          "readOnly": true,
          "type": "date_time",
        },
        Object {
          "fieldName": "created_by",
          "header": "Created By",
          "readOnly": true,
          "type": "user",
        },
      ]
    }
    onChange={[Function]}
    persistedModel={
      Object {
        "customer_visible": true,
        "id": 23,
        "note_text": "note text here",
      }
    }
  />
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey={23}
      model={
        Object {
          "customer_visible": true,
          "id": 23,
          "note_text": "note text here",
        }
      }
      modelDelete={[MockFunction]}
      modelReset={[Function]}
      modelSave={[MockFunction]}
    />
  </div>
</div>
`;
