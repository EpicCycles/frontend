// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BrandModal BrandModal displays correctly for a brand 1`] = `
<div>
  <div
    style={
      Object {
        "textAlign": "right",
        "width": "100%",
      }
    }
  >
    <Icon
      as="i"
      circular={true}
      link={true}
      name="remove"
      onClick={[MockFunction]}
    />
  </div>
  <div
    style={
      Object {
        "textAlign": "left",
        "width": "100%",
      }
    }
  >
    <h2>
      Edit
       Brand
    </h2>
    <EditModelPage
      model={
        Object {
          "brand_name": "e brand 8",
          "id": 8,
          "link": "https://bianchi.co.uk",
          "supplier": Array [
            23,
            1,
            2,
            45,
            16,
          ],
        }
      }
      modelFields={
        Array [
          Object {
            "error": "A name is required for the brand",
            "fieldName": "brand_name",
            "header": "Brand Name",
            "length": 50,
            "required": true,
            "size": 20,
            "synonyms": Array [],
          },
          Object {
            "fieldName": "bike_brand",
            "header": "Bike Brand",
            "type": "checkbox",
          },
          Object {
            "fieldName": "link",
            "header": "URL",
            "length": 100,
            "size": 40,
            "type": "text",
            "validator": [Function],
          },
          Object {
            "fieldName": "supplier",
            "header": "Supplier",
            "synonyms": Array [
              "supplier",
            ],
            "type": "supplier",
          },
        ]
      }
      onChange={[Function]}
      persistedModel={
        Object {
          "brand_name": "e brand 8",
          "id": 8,
          "link": "https://bianchi.co.uk",
          "supplier": Array [
            23,
            1,
            2,
            45,
            16,
          ],
        }
      }
      suppliers={
        Array [
          Object {
            "id": 1,
            "supplier_name": "supplier 1",
          },
          Object {
            "id": 2,
            "supplier_name": "supplier 2",
          },
          Object {
            "id": 3,
            "supplier_name": "supplier 3",
          },
          Object {
            "id": 4,
            "supplier_name": "supplier 4",
          },
        ]
      }
    />
  </div>
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey={8}
      model={
        Object {
          "brand_name": "e brand 8",
          "id": 8,
          "link": "https://bianchi.co.uk",
          "supplier": Array [
            23,
            1,
            2,
            45,
            16,
          ],
        }
      }
      modelDelete={[Function]}
      modelReset={[Function]}
      modelSave={[Function]}
    />
  </div>
</div>
`;

exports[`BrandModal BrandModal displays correctly for a new brand 1`] = `
<div>
  <div
    style={
      Object {
        "textAlign": "right",
        "width": "100%",
      }
    }
  >
    <Icon
      as="i"
      circular={true}
      link={true}
      name="remove"
      onClick={[MockFunction]}
    />
  </div>
  <div
    style={
      Object {
        "textAlign": "left",
        "width": "100%",
      }
    }
  >
    <h2>
      New
       Brand
    </h2>
    <EditModelPage
      model={Object {}}
      modelFields={
        Array [
          Object {
            "error": "A name is required for the brand",
            "fieldName": "brand_name",
            "header": "Brand Name",
            "length": 50,
            "required": true,
            "size": 20,
            "synonyms": Array [],
          },
          Object {
            "fieldName": "bike_brand",
            "header": "Bike Brand",
            "type": "checkbox",
          },
          Object {
            "fieldName": "link",
            "header": "URL",
            "length": 100,
            "size": 40,
            "type": "text",
            "validator": [Function],
          },
          Object {
            "fieldName": "supplier",
            "header": "Supplier",
            "synonyms": Array [
              "supplier",
            ],
            "type": "supplier",
          },
        ]
      }
      onChange={[Function]}
      persistedModel={Object {}}
      suppliers={
        Array [
          Object {
            "id": 1,
            "supplier_name": "supplier 1",
          },
          Object {
            "id": 2,
            "supplier_name": "supplier 2",
          },
          Object {
            "id": 3,
            "supplier_name": "supplier 3",
          },
          Object {
            "id": 4,
            "supplier_name": "supplier 4",
          },
        ]
      }
    />
  </div>
  <div
    className="align_right"
  >
    <ModelEditIcons
      componentKey=""
      model={Object {}}
      modelDelete={[Function]}
      modelReset={[Function]}
      modelSave={[Function]}
    />
  </div>
</div>
`;
